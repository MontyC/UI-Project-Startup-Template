////
/// BEM Helper Mixins
/// Set of tools to make working with BEM easier and more visually appealing
/// @author Marc Mintel â€” [Article on Medium](https://medium.com/@marcmintel/pushing-bem-to-the-next-level-with-sass-3-4-5239d2371321#.k5bkv7mzk)
/// @link http://www.sassmeister.com/gist/6dac17c87fcf2d1555c4
/// @link https://css-tricks.com/snippets/sass/bem-mixins/
/// @group tools
////

$-bem-element-separator: '__';
$-bem-modifier-separator: '--';

/// Create a string from a selector
/// @access private
/// @ignore Specific to BEM Mixins
/// @group ~private
@function selectorToString($selector) {
	$selector: inspect($selector);

	//cast to string  $selector: str-slice($selector, 2, -2);
	//remove brackets
	@return $selector;
}

/// Check if a string "contains" a modifier
/// @access private
/// @ignore Specific to BEM Mixins
/// @group ~private
@function containsModifier($selector) {
	$selector: selectorToString($selector);

	@if str-index($selector, $-bem-modifier-separator) {
		@return true;
	} @else {
		@return false;
	}
}

/// Get a block name from a string
/// @access private
/// @ignore Specific to BEM Mixins
/// @group ~private
@function getBlock($selector) {
	$selector: selectorToString($selector);
	$modifierStart: str-index($selector, $-bem-modifier-separator) - 1;

	@return str-slice($selector, 0, $modifierStart);
}

/// Creates a Block
/// @access public
/// @example
/// 	@include block(my-block) {
/// 		background: red;
/// 	}
///
/// @output
/// ```css
/// /* Output from example */
/// .my-block {
///   	background: red;
/// }
/// ```
/// @param {String} $block - Block name
@mixin block($block) {
	.#{$block} {
		@content;
	}
}

/// @alias block
@mixin b($block) {
	@include block($block) {
		@content;
	}
}

/// Creates a Block Element.
/// Must be nested in a Block.
/// @access public
/// @example
/// 	@include block(my-block) {
/// 		background: red;
///
/// 		// Element must be nested inside a block.
/// 		@include element(my-element) {
/// 			color: blue;
/// 		}
/// 	}
///
/// @output
/// ```css
/// /* Output from example */
/// .my-block {
///   	background: red;
/// }
///
/// .my-block__my-element {
///   	color: blue;
/// }
/// ```
/// @param {String} $element - Element name
@mixin element($element) {
	$selector: &;

	@if containsModifier($selector) {
		$block: getBlock($selector);

		@at-root {
			#{$selector} {
				#{$block+$-bem-element-separator+$element} {
					@content;
				}
			}
		}
	} @else {
		@at-root {
			#{$selector+$-bem-element-separator+$element} {
				@content;
			}
		}
	}
}

/// @alias element
@mixin e($block) {
	@include element($block) {
		@content;
	}
}

/// Creates a Block Modifier
/// Must be nested in a Block or Element. Can contain Elements for modification.
/// @access public
/// @example
/// 	@include block(my-block) {
/// 		background: red;
///
/// 		// Must be nested in a block
/// 		@include modifier(my-modifier) {
/// 			font-size: 2em;
///
/// 			// Modify sub elements
/// 			@include element(my-sub-element) {
/// 				background: green;
/// 			}
/// 		}
///
/// 		@include element(my-element) {
/// 			color: blue;
///
/// 			// Modify element
/// 			@include modifier(my-element-modifier) {
/// 				color: purple;
/// 			}
/// 		}
/// 	}
///
/// @output
/// ```css
/// /* Output from example */
/// .my-block {
///   	background: red;
/// }
///
/// .my-block--my-modifier {
///   	font-size: 2em;
/// }
///
/// .my-block--my-modifier .my-block__my-sub-element {
///   	background: green;
/// }
///
/// .my-block__my-element {
///    	color: blue;
/// }
///
/// .my-block__my-element--my-element-modifier {
///   	color: purple;
/// }
/// ```
/// @param {String} $element - Element name
@mixin modifier($modifier) {
	@at-root {
		#{&}#{$-bem-modifier-separator+$modifier} {
			@content;
		}
	}
}

/// @alias modifier
@mixin m($modifier) {
	@include modifier($modifier) {
		@content;
	}
}
